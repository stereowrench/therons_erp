defmodule TheronsErp.Repo.Migrations.AddSales do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:sales_orders, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")
    end

    create table(:sales_lines, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :sales_price, :money_with_currency
      add :unit_price, :money_with_currency
      add :quantity, :bigint

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :sales_order_id,
          references(:sales_orders,
            column: :id,
            name: "sales_lines_sales_order_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :product_id,
          references(:products,
            column: :id,
            name: "sales_lines_product_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:sales_lines, "sales_lines_sales_order_id_fkey")

    drop constraint(:sales_lines, "sales_lines_product_id_fkey")

    drop table(:sales_lines)

    drop table(:sales_orders)
  end
end

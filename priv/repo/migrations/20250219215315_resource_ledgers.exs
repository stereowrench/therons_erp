defmodule TheronsErp.Repo.Migrations.ResourceLedgers do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:resource_ledger_transfers, primary_key: false) do
      add :amount, :decimal, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :id, :binary, null: false, primary_key: true

      add :timestamp, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :from_location_id, :uuid
      add :to_location_id, :uuid
      add :from_account_id, :uuid
      add :to_account_id, :uuid
    end

    create table(:resource_ledger_balances, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
      add :balance, :decimal

      add :transfer_id,
          references(:resource_ledger_transfers,
            column: :id,
            name: "resource_ledger_balances_transfer_id_fkey",
            type: :binary,
            prefix: "public"
          ),
          null: false

      add :account_id, :uuid, null: false
    end

    create table(:resource_ledger_accounts, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("uuid_generate_v7()"), primary_key: true
    end

    alter table(:resource_ledger_transfers) do
      modify :from_location_id,
             references(:resource_ledger_accounts,
               column: :id,
               name: "resource_ledger_transfers_from_location_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :to_location_id,
             references(:resource_ledger_accounts,
               column: :id,
               name: "resource_ledger_transfers_to_location_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :from_account_id,
             references(:resource_ledger_accounts,
               column: :id,
               name: "resource_ledger_transfers_from_account_id_fkey",
               type: :uuid,
               prefix: "public"
             )

      modify :to_account_id,
             references(:resource_ledger_accounts,
               column: :id,
               name: "resource_ledger_transfers_to_account_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    alter table(:resource_ledger_balances) do
      modify :account_id,
             references(:resource_ledger_accounts,
               column: :id,
               name: "resource_ledger_balances_account_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    create unique_index(:resource_ledger_balances, [:account_id, :transfer_id],
             name: "resource_ledger_balances_unique_references_index"
           )

    alter table(:resource_ledger_accounts) do
      add :identifier, :text, null: false

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :currency, :text, null: false
    end

    create unique_index(:resource_ledger_accounts, [:identifier],
             name: "resource_ledger_accounts_unique_identifier_index"
           )
  end

  def down do
    drop_if_exists unique_index(:resource_ledger_accounts, [:identifier],
                     name: "resource_ledger_accounts_unique_identifier_index"
                   )

    alter table(:resource_ledger_accounts) do
      remove :currency
      remove :updated_at
      remove :inserted_at
      remove :identifier
    end

    drop_if_exists unique_index(:resource_ledger_balances, [:account_id, :transfer_id],
                     name: "resource_ledger_balances_unique_references_index"
                   )

    drop constraint(:resource_ledger_balances, "resource_ledger_balances_account_id_fkey")

    alter table(:resource_ledger_balances) do
      modify :account_id, :uuid
    end

    drop constraint(:resource_ledger_transfers, "resource_ledger_transfers_from_location_id_fkey")

    drop constraint(:resource_ledger_transfers, "resource_ledger_transfers_to_location_id_fkey")

    drop constraint(:resource_ledger_transfers, "resource_ledger_transfers_from_account_id_fkey")

    drop constraint(:resource_ledger_transfers, "resource_ledger_transfers_to_account_id_fkey")

    alter table(:resource_ledger_transfers) do
      modify :to_account_id, :uuid
      modify :from_account_id, :uuid
      modify :to_location_id, :uuid
      modify :from_location_id, :uuid
    end

    drop table(:resource_ledger_accounts)

    drop constraint(:resource_ledger_balances, "resource_ledger_balances_transfer_id_fkey")

    drop table(:resource_ledger_balances)

    drop table(:resource_ledger_transfers)
  end
end

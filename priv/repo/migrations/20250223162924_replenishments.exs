defmodule TheronsErp.Repo.Migrations.Replenishments do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    rename table(:vendors), :zip_coe, to: :zip_code

    alter table(:vendors) do
      modify :zip_code, :text
    end

    alter table(:routes) do
      modify :type, :text, null: false
    end

    create table(:replenishments, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :quantity_multiple, :bigint
      add :price, :money_with_currency

      add :inserted_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :updated_at, :utc_datetime_usec,
        null: false,
        default: fragment("(now() AT TIME ZONE 'utc')")

      add :product_id,
          references(:products,
            column: :id,
            name: "replenishments_product_id_fkey",
            type: :uuid,
            prefix: "public"
          )

      add :vendor_id,
          references(:vendors,
            column: :id,
            name: "replenishments_vendor_id_fkey",
            type: :uuid,
            prefix: "public"
          )
    end
  end

  def down do
    drop constraint(:replenishments, "replenishments_product_id_fkey")

    drop constraint(:replenishments, "replenishments_vendor_id_fkey")

    drop table(:replenishments)

    alter table(:routes) do
      modify :type, :text, null: true
    end

    alter table(:vendors) do
      modify :zip_coe, :text
    end

    rename table(:vendors), :zip_code, to: :zip_coe
  end
end
